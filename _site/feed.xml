<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2024-01-06T16:04:32+09:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">기록하는 습관</title><subtitle>Johnny&apos;s development blog</subtitle><author><name>Johnny</name></author><entry><title type="html">[vscode] user snippet 사용법</title><link href="http://localhost:4000/editor/user-snippet/" rel="alternate" type="text/html" title="[vscode] user snippet 사용법" /><published>2024-01-06T00:00:00+09:00</published><updated>2024-01-06T00:00:00+09:00</updated><id>http://localhost:4000/editor/user-snippet</id><content type="html" xml:base="http://localhost:4000/editor/user-snippet/"><![CDATA[<h2 id="user-snippet-이란">user snippet 이란?</h2>

<p>vscode에서 제공하는 기능으로, 자주 사용하는 코드를 미리 저장해두고 사용할 수 있게 해주는 기능이다</p>

<h2 id="user-snippet-사용법">user snippet 사용법</h2>

<h3 id="1-vscode에서-ctrl--shift--p를-눌러서-명령어-창을-띄운다">1. vscode에서 <code class="language-plaintext highlighter-rouge">ctrl + shift + p</code>를 눌러서 명령어 창을 띄운다</h3>

<h3 id="2-명령어-창에-snippet을-입력하고-configure-user-snippets를-선택">2. 명령어 창에 <code class="language-plaintext highlighter-rouge">snippet</code>을 입력하고 <code class="language-plaintext highlighter-rouge">Configure User Snippets</code>를 선택</h3>

<p><img src="/assets/images/2024-01-06/01.png" alt="user-snippet" /></p>

<h3 id="3-snippet을-사용할-영역을-선택-3가지-옵션">3. <code class="language-plaintext highlighter-rouge">snippet</code>을 사용할 영역을 선택 (3가지 옵션)</h3>

<ol>
  <li>글로벌 영역에서 사용할 경우 <code class="language-plaintext highlighter-rouge">New Global Snippets file...</code></li>
  <li>특정 프로젝트에서만 사용할 경우 <code class="language-plaintext highlighter-rouge">New Snippets file for 'project name'</code></li>
  <li>특정 언어에서만 사용할 경우 <code class="language-plaintext highlighter-rouge">New Snippets file for 'language name'</code></li>
</ol>

<h3 id="4-snippet의-이름을-입력">4. <code class="language-plaintext highlighter-rouge">snippet</code>의 이름을 입력</h3>

<p>본인이 알아보기 쉽게 이름을 지어주면 된다. (ex. <code class="language-plaintext highlighter-rouge">print hello python</code>)</p>

<h3 id="5-사용할-코드를-입력">5. 사용할 코드를 입력</h3>

<p>처음 스니펫을 생성하면 아래와 같이 비어있는 <code class="language-plaintext highlighter-rouge">snippet</code>이 생성된다</p>

<p><img src="/assets/images/2024-01-06/02.png" alt="user-snippet" /></p>

<p>이를 쉽게 생성하기 위해 <a href="https://snippet-generator.app" target="\_blank">https://snippet-generator.app</a> 에서 쉽게<code class="language-plaintext highlighter-rouge">snippet</code>을 생성할 수 있다</p>

<p>사이트에 접속을 하면 아래와 같은 화면이 나오는데 각각 입력할 내용은 아래와 같다</p>

<p><img src="/assets/images/2024-01-06/03.png" alt="user-snippet" width="80%" /></p>

<ol>
  <li>description : <code class="language-plaintext highlighter-rouge">snippet</code>의 설명</li>
  <li>Tab trigger : <code class="language-plaintext highlighter-rouge">snippet</code>을 호출할 때 사용할 문구</li>
  <li>Your snippet : <code class="language-plaintext highlighter-rouge">snippet</code>으로 사용할 코드를 입력</li>
  <li>오른쪽 에 생성된 코드를 확인하고 오른쪽 하단의 <code class="language-plaintext highlighter-rouge">Copy snippet</code>을 눌러서 복사</li>
  <li>vscode에서 <code class="language-plaintext highlighter-rouge">snippet</code>을 생성한 파일에 복사한 코드를 붙여넣기</li>
</ol>

<div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="w">
  </span><span class="nl">"test snippet"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
    </span><span class="nl">"prefix"</span><span class="p">:</span><span class="w"> </span><span class="s2">"my_snippet"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"body"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="s2">"print(</span><span class="se">\"</span><span class="s2">hello python</span><span class="se">\"</span><span class="s2">)"</span><span class="p">],</span><span class="w">
    </span><span class="nl">"description"</span><span class="p">:</span><span class="w"> </span><span class="s2">"test snippet"</span><span class="w">
  </span><span class="p">}</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div>

<h3 id="6-snippet-사용">6. <code class="language-plaintext highlighter-rouge">snippet</code> 사용</h3>

<p><code class="language-plaintext highlighter-rouge">snippet</code>을 사용할 때는 <code class="language-plaintext highlighter-rouge">Tab trigger</code>에 입력한 문구를 입력하고 <code class="language-plaintext highlighter-rouge">Tab</code>키를 누르면 된다</p>

<p><img src="/assets/images/2024-01-06/05.gif" alt="user-snippet" width="70%" /></p>]]></content><author><name>Johnny</name></author><category term="editor" /><category term="vscode" /><category term="user snippet" /><summary type="html"><![CDATA[user snippet 이란?]]></summary></entry><entry><title type="html">[Python] 환경변수 .env 사용법</title><link href="http://localhost:4000/python/dot-env/" rel="alternate" type="text/html" title="[Python] 환경변수 .env 사용법" /><published>2023-12-21T00:00:00+09:00</published><updated>2023-12-21T00:00:00+09:00</updated><id>http://localhost:4000/python/dot-env</id><content type="html" xml:base="http://localhost:4000/python/dot-env/"><![CDATA[<h2 id="dotenv를-사용해야-하는-이유">dotenv를 사용해야 하는 이유</h2>

<p>개발을 하다 보면 외부에서 발급받은 API 키를 코드에 직접 사용하거나 데이터베이스 접속을 위해 id 또는 password 등을 입력해야 하는 상황이 있다</p>

<p>이럴때 걱정되는 점 중의 하나가, git hub에 업로드한 repository를 private로 따로 설정을 해두지 않았다면 모든 사람에게 민감한 정보가 그대로 유출될 수 있다는 것이다</p>

<p>보편적으로 .env는 웹 개발 환경에서 많이 사용되지만 필요하다면 파이썬에서도 이 기능을 쉽게 사용할 수 있다</p>

<h2 id="dotenv-설치">dotenv 설치</h2>

<div class="language-zsh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>pip <span class="nb">install </span>python-dotenv
</code></pre></div></div>

<h2 id="env-파일-생성">.env 파일 생성</h2>

<p><img src="/assets/images/2023-12-21/dot.png" alt="dotenv" /></p>

<p>작업 폴더내 .env파일을 하나 생성하고</p>

<h3 id="-env-">&lt; .env &gt;</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">MY_ID</span> <span class="o">=</span> <span class="n">ILovePython</span>
<span class="n">MY_PASSWORD</span> <span class="o">=</span> <span class="mi">1234</span>
</code></pre></div></div>

<p>왼쪽은 변수명, 그리고 오른쪽에는 값을 지정해준다</p>

<h3 id="-dot_envpy-">&lt; dot_env.py &gt;</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="n">os</span>
<span class="kn">from</span> <span class="n">dotenv</span> <span class="kn">import</span> <span class="n">load_dotenv</span>

<span class="nf">load_dotenv</span><span class="p">()</span>

<span class="nb">id</span> <span class="o">=</span> <span class="n">os</span><span class="p">.</span><span class="n">environ</span><span class="p">.</span><span class="nf">get</span><span class="p">(</span><span class="sh">"</span><span class="s">MY_ID</span><span class="sh">"</span><span class="p">)</span>
<span class="n">pw</span> <span class="o">=</span> <span class="n">os</span><span class="p">.</span><span class="n">environ</span><span class="p">.</span><span class="nf">get</span><span class="p">(</span><span class="sh">"</span><span class="s">MY_PASSWORD</span><span class="sh">"</span><span class="p">)</span>

<span class="nf">print</span><span class="p">(</span><span class="nb">id</span><span class="p">,</span> <span class="n">pw</span><span class="p">)</span>
</code></pre></div></div>

<p>사용할 파이썬 파일에서 위 처럼 불러와서 사용하면 된다 :)</p>

<p class="notice--warning"><i class="material-symbols-outlined" style="vertical-align: middle;">check_circle</i> github에 commit 하기 전에 .gitignore에 .env를 잊지 말고 넣어주면 완료!</p>]]></content><author><name>Johnny</name></author><category term="python" /><category term="dot-env" /><category term="python" /><summary type="html"><![CDATA[dotenv를 사용해야 하는 이유]]></summary></entry><entry><title type="html">[Python] Open API 영화 데이터 수집 및 저장</title><link href="http://localhost:4000/python/OpenAPI/" rel="alternate" type="text/html" title="[Python] Open API 영화 데이터 수집 및 저장" /><published>2023-12-18T00:00:00+09:00</published><updated>2023-12-18T00:00:00+09:00</updated><id>http://localhost:4000/python/OpenAPI</id><content type="html" xml:base="http://localhost:4000/python/OpenAPI/"><![CDATA[<p>Python에서 open api를 활용하여 데이터 수집 하는 방법을 알아보고, csv와 json으로 저장 하는 방법을 알아보자</p>

<p>사이트는 영화 진흥 위원회에서 제공하는 데이터를 받아올 예정이다</p>

<p><a href="https://www.kobis.or.kr/kobisopenapi/homepg/main/main.do">영화 진흥 위원회 바로가기</a></p>

<h2 id="1-회원가입">1. 회원가입</h2>

<ul>
  <li>
    <p>위 주소로 접속 후 로그인 버튼을 눌러서 회원 가입을 한다<br />
<img src="/assets/images/2023-12-18/01.png" alt="sign-in" /></p>
  </li>
  <li>
    <p>키 발급 받기를 클릭 하고<br />
<img src="/assets/images/2023-12-18/02.png" alt="sign-in" /><br /></p>
  </li>
  <li>
    <p>사용목적과 관리명을 임의로 정해준 뒤, 사용url은 http://localhost로 입력<br />키 발급이 완료되고 발급된 키는 조금 있다가 사용할 예정이다
<img src="/assets/images/2023-12-18/03.png" alt="sign-in" /></p>
  </li>
  <li>
    <p>이제 OPEN API를 클릭!<br />
<img src="/assets/images/2023-12-18/04.png" alt="sign-in" /></p>
  </li>
  <li>
    <p>주간/주말 박스오피스 클릭 후 REST 방식을 확인<br />요청 인터페이스를 보면 다른건 default값이 있지만, key와 targetDt는 지정해 주어야 한다<br />
<img src="/assets/images/2023-12-18/05.png" alt="sign-in" /></p>
  </li>
  <li>
    <p>내가 리턴 받을 데이터에 대한 설명이다. 조금 있다가 자세하게 살펴보자<br />
<img src="/assets/images/2023-12-18/06.png" alt="sign-in" /></p>
  </li>
  <li>
    <p>Json형태로 응답 받을 예정이다<br />
<img src="/assets/images/2023-12-18/07.png" alt="sign-in" /></p>
  </li>
</ul>

<blockquote>
  <p>끝으로 마지막 사진의 json부분을 복사해서 사용할 예정이다. 아래 코드의 발급키 부분에 발급받은 키를 넣어주면 된다</p>
</blockquote>

<h2 id="2-영화-데이터-받아오기">2. 영화 데이터 받아오기</h2>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="n">requests</span>
<span class="kn">import</span> <span class="n">json</span>

<span class="c1"># 발급 받은 키를 변수에 할당
</span><span class="n">key</span> <span class="o">=</span> <span class="sh">"</span><span class="s">발급 키</span><span class="sh">"</span>

<span class="c1"># 조회를 할 날짜를 yyyymmdd 형식으로 지정
</span><span class="n">date</span> <span class="o">=</span> <span class="mi">20231217</span>

<span class="c1"># 세선 생성
</span><span class="n">session</span> <span class="o">=</span> <span class="n">requests</span><span class="p">.</span><span class="nc">Session</span><span class="p">()</span>
<span class="c1"># url 생성
</span><span class="n">url</span> <span class="o">=</span> <span class="sa">f</span><span class="sh">"</span><span class="s">http://www.kobis.or.kr/kobisopenapi/webservice/rest/boxoffice/searchDailyBoxOfficeList.json?key=</span><span class="si">{</span><span class="n">key</span><span class="si">}</span><span class="s">&amp;targetDt=</span><span class="si">{</span><span class="n">date</span><span class="si">}</span><span class="sh">"</span>

<span class="n">res</span> <span class="o">=</span> <span class="n">session</span><span class="p">.</span><span class="nf">get</span><span class="p">(</span><span class="n">url</span><span class="p">)</span>
<span class="c1"># 응답 받은 데이터를 json 형식으로 movies 변수에 할당
</span><span class="n">movies</span> <span class="o">=</span> <span class="n">json</span><span class="p">.</span><span class="nf">loads</span><span class="p">(</span><span class="n">res</span><span class="p">.</span><span class="n">text</span><span class="p">)</span>

<span class="c1"># 결과 확인
</span><span class="nf">print</span><span class="p">(</span><span class="n">movies</span><span class="p">)</span>
</code></pre></div></div>

<p>결과를 확인 해보면 딕셔너리(json) 형태로 값을 리턴 받았을 것이다.</p>

<h2 id="3-json-및-csv-형식으로-파일-저장">3. json 및 csv 형식으로 파일 저장</h2>

<h3 id="--csv">- csv</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># csv로 저장될 파일 이름 지정
</span><span class="n">fname1</span> <span class="o">=</span> <span class="sa">f</span><span class="sh">"</span><span class="s">boxOffice_</span><span class="si">{</span><span class="n">date</span><span class="si">}</span><span class="s">.csv</span><span class="sh">"</span>

<span class="c1"># 저 데이터들 중에 순위, 영화 명, 개봉일, 누적 관객 수를 저장
# 필요한 데이터는 "응답 구조" 가 나와있는 부분에서 확인할 수 있다
</span><span class="k">with</span> <span class="nf">open</span><span class="p">(</span><span class="n">fname1</span><span class="p">,</span> <span class="sh">"</span><span class="s">w</span><span class="sh">"</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="sh">"</span><span class="s">utf-8</span><span class="sh">"</span><span class="p">)</span> <span class="k">as</span> <span class="n">f</span><span class="p">:</span>
    <span class="n">f</span><span class="p">.</span><span class="nf">write</span><span class="p">(</span><span class="sh">"</span><span class="s">순위,영화명,개봉일,누적관객</span><span class="se">\n</span><span class="sh">"</span><span class="p">)</span>
    <span class="k">for</span> <span class="n">v</span> <span class="ow">in</span> <span class="n">movies</span><span class="p">[</span><span class="sh">"</span><span class="s">boxOfficeResult</span><span class="sh">"</span><span class="p">][</span><span class="sh">"</span><span class="s">dailyBoxOfficeList</span><span class="sh">"</span><span class="p">]:</span>
        <span class="n">f</span><span class="p">.</span><span class="nf">write</span><span class="p">(</span><span class="sa">f</span><span class="sh">"</span><span class="si">{</span><span class="n">v</span><span class="p">[</span><span class="sh">'</span><span class="s">rank</span><span class="sh">'</span><span class="p">]</span><span class="si">}</span><span class="s">,</span><span class="si">{</span><span class="n">v</span><span class="p">[</span><span class="sh">'</span><span class="s">movieNm</span><span class="sh">'</span><span class="p">]</span><span class="si">}</span><span class="s">,</span><span class="si">{</span><span class="n">v</span><span class="p">[</span><span class="sh">'</span><span class="s">openDt</span><span class="sh">'</span><span class="p">]</span><span class="si">}</span><span class="s">,</span><span class="si">{</span><span class="n">v</span><span class="p">[</span><span class="sh">'</span><span class="s">audiAcc</span><span class="sh">'</span><span class="p">]</span><span class="si">}</span><span class="se">\n</span><span class="sh">"</span><span class="p">)</span>

<span class="c1"># json으로 저장될 파일 이름 지정
</span><span class="n">fname2</span> <span class="o">=</span> <span class="sa">f</span><span class="sh">"</span><span class="s">boxOffice_</span><span class="si">{</span><span class="n">date</span><span class="si">}</span><span class="s">.json</span><span class="sh">"</span>
<span class="k">with</span> <span class="nf">open</span><span class="p">(</span><span class="n">fname2</span><span class="p">,</span> <span class="sh">"</span><span class="s">w</span><span class="sh">"</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="sh">"</span><span class="s">utf-8</span><span class="sh">"</span><span class="p">)</span> <span class="k">as</span> <span class="n">f</span><span class="p">:</span>
    <span class="n">json</span><span class="p">.</span><span class="nf">dump</span><span class="p">(</span><span class="n">movies</span><span class="p">,</span> <span class="n">f</span><span class="p">,</span> <span class="n">ensure_ascii</span><span class="o">=</span><span class="bp">False</span><span class="p">,</span> <span class="n">indent</span><span class="o">=</span><span class="mi">2</span><span class="p">)</span>
</code></pre></div></div>

<h3 id="--json">- Json</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="n">requests</span>
<span class="kn">import</span> <span class="n">json</span>

<span class="n">key</span> <span class="o">=</span> <span class="sh">"</span><span class="s">발급 키</span><span class="sh">"</span>
<span class="n">date</span> <span class="o">=</span> <span class="mi">20231217</span>

<span class="n">session</span> <span class="o">=</span> <span class="n">requests</span><span class="p">.</span><span class="nc">Session</span><span class="p">()</span>
<span class="n">url</span> <span class="o">=</span> <span class="sa">f</span><span class="sh">"</span><span class="s">http://www.kobis.or.kr/kobisopenapi/webservice/rest/boxoffice/searchDailyBoxOfficeList.json?key=</span><span class="si">{</span><span class="n">key</span><span class="si">}</span><span class="s">&amp;targetDt=</span><span class="si">{</span><span class="n">date</span><span class="si">}</span><span class="sh">"</span>

<span class="n">res</span> <span class="o">=</span> <span class="n">session</span><span class="p">.</span><span class="nf">get</span><span class="p">(</span><span class="n">url</span><span class="p">)</span>
<span class="n">movies</span> <span class="o">=</span> <span class="n">json</span><span class="p">.</span><span class="nf">loads</span><span class="p">(</span><span class="n">res</span><span class="p">.</span><span class="n">text</span><span class="p">)</span>

<span class="n">fname1</span> <span class="o">=</span> <span class="sa">f</span><span class="sh">"</span><span class="s">boxOffice_</span><span class="si">{</span><span class="n">date</span><span class="si">}</span><span class="s">.csv</span><span class="sh">"</span>

<span class="k">with</span> <span class="nf">open</span><span class="p">(</span><span class="n">fname1</span><span class="p">,</span> <span class="sh">"</span><span class="s">w</span><span class="sh">"</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="sh">"</span><span class="s">utf-8</span><span class="sh">"</span><span class="p">)</span> <span class="k">as</span> <span class="n">f</span><span class="p">:</span>
    <span class="n">f</span><span class="p">.</span><span class="nf">write</span><span class="p">(</span><span class="sh">"</span><span class="s">순위,영화명,개봉일,누적관객</span><span class="se">\n</span><span class="sh">"</span><span class="p">)</span>
    <span class="k">for</span> <span class="n">v</span> <span class="ow">in</span> <span class="n">movies</span><span class="p">[</span><span class="sh">"</span><span class="s">boxOfficeResult</span><span class="sh">"</span><span class="p">][</span><span class="sh">"</span><span class="s">dailyBoxOfficeList</span><span class="sh">"</span><span class="p">]:</span>
        <span class="n">f</span><span class="p">.</span><span class="nf">write</span><span class="p">(</span><span class="sa">f</span><span class="sh">"</span><span class="si">{</span><span class="n">v</span><span class="p">[</span><span class="sh">'</span><span class="s">rank</span><span class="sh">'</span><span class="p">]</span><span class="si">}</span><span class="s">,</span><span class="si">{</span><span class="n">v</span><span class="p">[</span><span class="sh">'</span><span class="s">movieNm</span><span class="sh">'</span><span class="p">]</span><span class="si">}</span><span class="s">,</span><span class="si">{</span><span class="n">v</span><span class="p">[</span><span class="sh">'</span><span class="s">openDt</span><span class="sh">'</span><span class="p">]</span><span class="si">}</span><span class="s">,</span><span class="si">{</span><span class="n">v</span><span class="p">[</span><span class="sh">'</span><span class="s">audiAcc</span><span class="sh">'</span><span class="p">]</span><span class="si">}</span><span class="se">\n</span><span class="sh">"</span><span class="p">)</span>


<span class="n">fname2</span> <span class="o">=</span> <span class="sa">f</span><span class="sh">"</span><span class="s">boxOffice_</span><span class="si">{</span><span class="n">date</span><span class="si">}</span><span class="s">.json</span><span class="sh">"</span>

<span class="k">with</span> <span class="nf">open</span><span class="p">(</span><span class="n">fname2</span><span class="p">,</span> <span class="sh">"</span><span class="s">w</span><span class="sh">"</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="sh">"</span><span class="s">utf-8</span><span class="sh">"</span><span class="p">)</span> <span class="k">as</span> <span class="n">f</span><span class="p">:</span>
    <span class="n">json</span><span class="p">.</span><span class="nf">dump</span><span class="p">(</span><span class="n">movies</span><span class="p">,</span> <span class="n">f</span><span class="p">,</span> <span class="n">ensure_ascii</span><span class="o">=</span><span class="bp">False</span><span class="p">,</span> <span class="n">indent</span><span class="o">=</span><span class="mi">2</span><span class="p">)</span>
</code></pre></div></div>]]></content><author><name>Johnny</name></author><category term="python" /><category term="python" /><category term="Open API" /><summary type="html"><![CDATA[Python에서 open api를 활용하여 데이터 수집 하는 방법을 알아보고, csv와 json으로 저장 하는 방법을 알아보자]]></summary></entry><entry><title type="html">[Python] 다른 폴더에 module import(호출)하기</title><link href="http://localhost:4000/python/import-python-file/" rel="alternate" type="text/html" title="[Python] 다른 폴더에 module import(호출)하기" /><published>2023-12-18T00:00:00+09:00</published><updated>2023-12-18T00:00:00+09:00</updated><id>http://localhost:4000/python/import-python-file</id><content type="html" xml:base="http://localhost:4000/python/import-python-file/"><![CDATA[<h1 id="다른폴더에-있는-module-호출">다른폴더에 있는 module 호출</h1>

<p>바로 본론으로 들어가자면…</p>

<p>파이썬을 배우면서 어떻게 보면 가장 기본적이지만, 헷갈리는 부분이 있었는데</p>

<p>그 중에 하나가 바로 내가 만든 class나 함수를 만들어 놓은 파일을 다른 폴더에서 import 하는 방법이다</p>

<p>여러 경우의 수가 있는데, 한번 살펴 보기로 해보자</p>

<h2 id="1같은-폴더에-있는-파일인-경우">1.같은 폴더에 있는 파일인 경우</h2>

<ul>
  <li>가장 간단한 케이스이다</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">from</span> <span class="n">다른파일.py</span> <span class="kn">import</span> <span class="n">내모듈</span>
</code></pre></div></div>

<h2 id="2하위-폴더일-경우">2.하위 폴더일 경우</h2>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">from</span> <span class="n">하위폴더.다른파일.py</span> <span class="kn">import</span> <span class="n">내모듈</span>
</code></pre></div></div>

<h2 id="3상위-폴더일-경우">3.상위 폴더일 경우</h2>

<p>만약 상위폴더에 접근을 해야할 경우라면, 작업경로에 파일의 새로운 경로를 추가해줘야 한다.</p>

<p>하지만 폴더 구조가 복잡할 경우를 대비해서 제일 상위 폴더를 잡아놓는게 일반적이다.</p>

<p><img src="/assets/images/2023-12-18/get_path.png" alt="copy-path" /></p>

<p>vscode 기준으로 절대 경로를 얻는 방법은 폴더를 오른쪽 클릭 후 copy path를 선택하면 복사가 된다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="n">sys</span>
<span class="n">sys</span><span class="p">.</span><span class="n">path</span><span class="p">.</span><span class="nf">append</span><span class="p">(</span><span class="sh">"</span><span class="s">해당 폴더의 절대 경로</span><span class="sh">"</span><span class="p">)</span>
</code></pre></div></div>

<h2 id="4같은-부모-폴더-안에-있지만-다른-폴더에-있는-파일인-경우">4.같은 부모 폴더 안에 있지만 다른 폴더에 있는 파일인 경우</h2>

<p>상위 폴더의 경우와 마찬가지로 절대 경로로 불러와야 한다.</p>]]></content><author><name>Johnny</name></author><category term="python" /><category term="python" /><summary type="html"><![CDATA[다른폴더에 있는 module 호출]]></summary></entry><entry><title type="html">[Python] selenium 기본 사용법</title><link href="http://localhost:4000/python/selenium/" rel="alternate" type="text/html" title="[Python] selenium 기본 사용법" /><published>2023-12-14T00:00:00+09:00</published><updated>2023-12-14T00:00:00+09:00</updated><id>http://localhost:4000/python/selenium</id><content type="html" xml:base="http://localhost:4000/python/selenium/"><![CDATA[<p class="notice--warning">이 포스트의 설명은 chrome웹 브라우저를 기반으로, 다른 브라우저를 사용할 경우 아래 공식 홈페이지 참고</p>

<p><a href="https://www.selenium.dev/">selenium 홈페이지 바로가기</a> <span class="material-symbols-outlined" style="vertical-align: middle;">link</span></p>

<h2 id="1-selenium-소개">1. selenium 소개</h2>

<p>selenium은 파이썬을 사용해서 웹 브라우저를 조작하기 위한 라이브러리이다</p>

<p>아래 이미지는 selenium에서 제공하는 테스트 페이지이고 간단하게 Text input에 원하는 내용을 입력한 뒤, Submit버튼을 자동으로 누르는 코드를 작성 하려고 한다</p>

<p><img src="/assets/images/2023-12-14/01.png" alt="image1" /></p>

<h2 id="2-selenium-설치">2. selenium 설치</h2>

<p>selenium과 자동으로 chrome driver의 버전 관리를 위해 autoinstaller도 함께 설치(권장)</p>

<div class="language-zsh highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>pip <span class="nb">install </span>selenium
<span class="nv">$ </span>pip <span class="nb">install </span>chromedriver-autoinstaller
</code></pre></div></div>

<p><span style="color:gray; font-size:medium;"><em>이제 모든 준비는 완료… 드가자!</em></span></p>

<h2 id="3-코드작성-및-테스트">3. 코드작성 및 테스트</h2>

<h3 id="--라이브러리-호출">- 라이브러리 호출</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># ChromeDriver 자동 설치 모듈
</span><span class="kn">import</span> <span class="n">chromedriver_autoinstaller</span>
<span class="c1"># Chrome을 제어하기 위한 객체
</span><span class="kn">from</span> <span class="n">selenium</span> <span class="kn">import</span> <span class="n">webdriver</span>
<span class="c1"># Chrome의 웹 페이지 로딩 완료까지 딜레이
</span><span class="kn">from</span> <span class="n">selenium.webdriver.support.wait</span> <span class="kn">import</span> <span class="n">WebDriverWait</span>
<span class="c1"># HTML요소 선택을 위해 사용
</span><span class="kn">from</span> <span class="n">selenium.webdriver.common.by</span> <span class="kn">import</span> <span class="n">By</span>
<span class="c1"># 결과를 눈으로 확인 하기 위한 강제 딜레이 적용 // 필수 x
</span><span class="kn">import</span> <span class="n">time</span>

<span class="c1"># 실행 시 자동으로 chromedriver의 버전을 확인하고 설치
</span><span class="n">chromedriver_autoinstaller</span><span class="p">.</span><span class="nf">install</span><span class="p">()</span>
<span class="n">driver</span> <span class="o">=</span> <span class="n">webdriver</span><span class="p">.</span><span class="nc">Chrome</span><span class="p">()</span>

<span class="c1"># 접속할 주소 (url 값은 실제 접속할 페이지의 주소로 변경)
</span><span class="n">driver</span><span class="p">.</span><span class="nf">get</span><span class="p">(</span><span class="sh">"</span><span class="s">https://www.selenium.dev/selenium/web/web-form.html</span><span class="sh">"</span><span class="p">)</span>
<span class="c1"># 최초 크롬 브라우저 가동 후 DOM이 로드 되고 해당 element가 생성되기 전까지 대기
</span><span class="n">driver</span><span class="p">.</span><span class="nf">implicitly_wait</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span>
</code></pre></div></div>

<h3 id="--수행할-기능-설정">- 수행할 기능 설정</h3>

<p>이제 작업을 수행하기 위해 위에서 설명했듯이 Text-input과 Submit 버튼을 선택해 주어야 한다</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">text_box</span> <span class="o">=</span> <span class="nc">WebDriverWait</span><span class="p">(</span><span class="n">driver</span><span class="p">,</span> <span class="mi">5</span><span class="p">).</span><span class="nf">until</span><span class="p">(</span><span class="k">lambda</span> <span class="n">x</span><span class="p">:</span> <span class="n">x</span><span class="p">.</span><span class="nf">find_element</span><span class="p">(</span><span class="n">By</span><span class="p">.</span><span class="n">NAME</span><span class="p">,</span> <span class="n">value</span><span class="o">=</span><span class="sh">"</span><span class="s">my-text</span><span class="sh">"</span><span class="p">))</span>
</code></pre></div></div>

<p>5초의 대기 시간을 갖지만, 뒤에 해당 element를 찾는다면 대기를 종료</p>

<p>by=<strong>By.NAME</strong>, value=”<strong>my-text</strong>“는 태그의 속성은 <strong>name</strong>이고 그 <strong>값으로 my-text</strong> 를 갖는 element를 선택 한다는 의미</p>

<p><img src="/assets/images/2023-12-14/02.png" alt="image2" /></p>

<p>웹 페이지에서 개발자도구를 열어서 확인해 보면 input 태그의 name이라는 속성이 있고 my-text라는 값을 갖고 있음을 알 수 있다</p>

<p>마찬가지로 Submit 버튼도 선택</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">submit_button</span> <span class="o">=</span> <span class="nc">WebDriverWait</span><span class="p">(</span><span class="n">driver</span><span class="p">,</span> <span class="mi">5</span><span class="p">).</span><span class="nf">until</span><span class="p">(</span><span class="k">lambda</span> <span class="n">x</span><span class="p">:</span> <span class="n">x</span><span class="p">.</span><span class="nf">find_element</span><span class="p">(</span><span class="n">By</span><span class="p">.</span><span class="n">CSS_SELECTOR</span><span class="p">,</span> <span class="n">value</span><span class="o">=</span><span class="sh">"</span><span class="s">button</span><span class="sh">"</span><span class="p">))</span>
</code></pre></div></div>

<p>조금 다른점은 <strong>CSS_SELECTOR</strong>를 활용해서 대상을 선택 해보았다. 상황에 따라 여러 옵션을 활용해 볼 수 있다</p>

<p>준비가 끝났으므로 바로 작동 시켜보자</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># 위에 선택한 text_box에 send_keys라는 메서드에 인자값으로 "Selenium"을 전달 하면 입력이 실행 됩니다
</span><span class="n">text_box</span><span class="p">.</span><span class="nf">send_keys</span><span class="p">(</span><span class="sh">"</span><span class="s">textbox에 입력할 문구를 입력하세요</span><span class="sh">"</span><span class="p">)</span>
<span class="n">time</span><span class="p">.</span><span class="nf">sleep</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
<span class="c1"># 마찬가지로 버튼 클릭
</span><span class="n">submit_button</span><span class="p">.</span><span class="nf">click</span><span class="p">()</span>
<span class="n">time</span><span class="p">.</span><span class="nf">sleep</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
<span class="c1"># 최종적으로 열려있는 브라우저를 종료 합니다
</span><span class="n">driver</span><span class="p">.</span><span class="nf">quit</span><span class="p">()</span>
</code></pre></div></div>

<h2 id="4-최종코드">4. 최종코드</h2>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">from</span> <span class="n">selenium</span> <span class="kn">import</span> <span class="n">webdriver</span>
<span class="kn">from</span> <span class="n">selenium.webdriver.support.wait</span> <span class="kn">import</span> <span class="n">WebDriverWait</span>
<span class="kn">from</span> <span class="n">selenium.webdriver.common.by</span> <span class="kn">import</span> <span class="n">By</span>
<span class="kn">import</span> <span class="n">time</span>

<span class="n">driver</span> <span class="o">=</span> <span class="n">webdriver</span><span class="p">.</span><span class="nc">Chrome</span><span class="p">()</span>
<span class="n">driver</span><span class="p">.</span><span class="nf">get</span><span class="p">(</span><span class="sh">"</span><span class="s">https://www.selenium.dev/selenium/web/web-form.html</span><span class="sh">"</span><span class="p">)</span>
<span class="n">driver</span><span class="p">.</span><span class="nf">implicitly_wait</span><span class="p">(</span><span class="mf">0.5</span><span class="p">)</span>

<span class="n">text_box</span> <span class="o">=</span> <span class="nc">WebDriverWait</span><span class="p">(</span><span class="n">driver</span><span class="p">,</span> <span class="mi">5</span><span class="p">).</span><span class="nf">until</span><span class="p">(</span><span class="k">lambda</span> <span class="n">x</span><span class="p">:</span> <span class="n">x</span><span class="p">.</span><span class="nf">find_element</span><span class="p">(</span><span class="n">By</span><span class="p">.</span><span class="n">NAME</span><span class="p">,</span> <span class="n">value</span><span class="o">=</span><span class="sh">"</span><span class="s">my-text</span><span class="sh">"</span><span class="p">))</span>
<span class="n">submit_button</span> <span class="o">=</span> <span class="nc">WebDriverWait</span><span class="p">(</span><span class="n">driver</span><span class="p">,</span> <span class="mi">5</span><span class="p">).</span><span class="nf">until</span><span class="p">(</span><span class="k">lambda</span> <span class="n">x</span><span class="p">:</span> <span class="n">x</span><span class="p">.</span><span class="nf">find_element</span><span class="p">(</span><span class="n">By</span><span class="p">.</span><span class="n">CSS_SELECTOR</span><span class="p">,</span> <span class="n">value</span><span class="o">=</span><span class="sh">"</span><span class="s">button</span><span class="sh">"</span><span class="p">))</span>
<span class="n">text_box</span><span class="p">.</span><span class="nf">send_keys</span><span class="p">(</span><span class="sh">"</span><span class="s">Selenium</span><span class="sh">"</span><span class="p">)</span>
<span class="n">time</span><span class="p">.</span><span class="nf">sleep</span><span class="p">(</span><span class="mf">1.5</span><span class="p">)</span>
<span class="n">submit_button</span><span class="p">.</span><span class="nf">click</span><span class="p">()</span>
<span class="n">time</span><span class="p">.</span><span class="nf">sleep</span><span class="p">(</span><span class="mf">1.5</span><span class="p">)</span>
<span class="n">driver</span><span class="p">.</span><span class="nf">quit</span><span class="p">()</span>
</code></pre></div></div>]]></content><author><name>Johnny</name></author><category term="python" /><category term="python" /><category term="selenium" /><summary type="html"><![CDATA[이 포스트의 설명은 chrome웹 브라우저를 기반으로, 다른 브라우저를 사용할 경우 아래 공식 홈페이지 참고]]></summary></entry></feed>